{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { FetchMealByFirstLetter, SearchMealByName } from '../services/mealtService.js';\nconst useMeals = search => {\n  _s();\n  // Recibir el término de búsqueda\n  const [meals, setMeals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMeals = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    const letters = 'abcdefghijklmnopqrstuvwxyz'.split('');\n    let allMeals = [];\n    try {\n      for (let letter of letters) {\n        const data = await FetchMealByFirstLetter(letter);\n        if (data) {\n          allMeals = allMeals.concat(data); // Agregar los meals obtenidos\n        }\n      }\n      setMeals(allMeals);\n    } catch (error) {\n      setError('Error fetching meals');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const searchMeals = useCallback(async () => {\n    if (search) {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await SearchMealByName(search); // Buscar meals por nombre\n        setMeals(data || []);\n      } catch (error) {\n        setError('Error fetching meals');\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      await fetchMeals(); // Si no hay búsqueda, obtener todos los meals\n    }\n  }, [search, fetchMeals]);\n  useEffect(() => {\n    searchMeals(); // Buscar meals al cambiar la entrada de búsqueda\n  }, [search, searchMeals]);\n  return {\n    meals,\n    loading,\n    error\n  };\n};\n_s(useMeals, \"jqQ05E1e+LWd9ZKZ3E/L+hdr5/Q=\");\nexport default useMeals;","map":{"version":3,"names":["useState","useEffect","useCallback","FetchMealByFirstLetter","SearchMealByName","useMeals","search","_s","meals","setMeals","loading","setLoading","error","setError","fetchMeals","letters","split","allMeals","letter","data","concat","searchMeals"],"sources":["C:/Users/Gianni/Desktop/DWRJS-segundo-parcial/src/hooks/useMeals.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { FetchMealByFirstLetter, SearchMealByName } from '../services/mealtService.js'; \r\n\r\nconst useMeals = (search) => { // Recibir el término de búsqueda\r\n  const [meals, setMeals] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchMeals = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    const letters = 'abcdefghijklmnopqrstuvwxyz'.split('');\r\n    let allMeals = [];\r\n\r\n    try {\r\n      for (let letter of letters) {\r\n        const data = await FetchMealByFirstLetter(letter);\r\n        if (data) {\r\n          allMeals = allMeals.concat(data); // Agregar los meals obtenidos\r\n        }\r\n      }\r\n      setMeals(allMeals);\r\n    } catch (error) {\r\n      setError('Error fetching meals');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const searchMeals = useCallback(async () => {\r\n    if (search) {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const data = await SearchMealByName(search); // Buscar meals por nombre\r\n        setMeals(data || []);\r\n      } catch (error) {\r\n        setError('Error fetching meals');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      await fetchMeals(); // Si no hay búsqueda, obtener todos los meals\r\n    }\r\n  }, [search, fetchMeals]);\r\n\r\n  useEffect(() => {\r\n    searchMeals(); // Buscar meals al cambiar la entrada de búsqueda\r\n  }, [search, searchMeals]);\r\n\r\n  return { meals, loading, error };\r\n};\r\n\r\nexport default useMeals;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,sBAAsB,EAAEC,gBAAgB,QAAQ,6BAA6B;AAEtF,MAAMC,QAAQ,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAAE;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,UAAU,GAAGZ,WAAW,CAAC,YAAY;IACzCS,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,MAAME,OAAO,GAAG,4BAA4B,CAACC,KAAK,CAAC,EAAE,CAAC;IACtD,IAAIC,QAAQ,GAAG,EAAE;IAEjB,IAAI;MACF,KAAK,IAAIC,MAAM,IAAIH,OAAO,EAAE;QAC1B,MAAMI,IAAI,GAAG,MAAMhB,sBAAsB,CAACe,MAAM,CAAC;QACjD,IAAIC,IAAI,EAAE;UACRF,QAAQ,GAAGA,QAAQ,CAACG,MAAM,CAACD,IAAI,CAAC,CAAC,CAAC;QACpC;MACF;MACAV,QAAQ,CAACQ,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,QAAQ,CAAC,sBAAsB,CAAC;IAClC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,WAAW,GAAGnB,WAAW,CAAC,YAAY;IAC1C,IAAII,MAAM,EAAE;MACVK,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,IAAI;QACF,MAAMM,IAAI,GAAG,MAAMf,gBAAgB,CAACE,MAAM,CAAC,CAAC,CAAC;QAC7CG,QAAQ,CAACU,IAAI,IAAI,EAAE,CAAC;MACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdC,QAAQ,CAAC,sBAAsB,CAAC;MAClC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,MAAM;MACL,MAAMG,UAAU,CAAC,CAAC,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACR,MAAM,EAAEQ,UAAU,CAAC,CAAC;EAExBb,SAAS,CAAC,MAAM;IACdoB,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,EAAE,CAACf,MAAM,EAAEe,WAAW,CAAC,CAAC;EAEzB,OAAO;IAAEb,KAAK;IAAEE,OAAO;IAAEE;EAAM,CAAC;AAClC,CAAC;AAACL,EAAA,CAhDIF,QAAQ;AAkDd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}